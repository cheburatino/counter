docType = "Task"
tableComment = "Задача"

tableName ="task"

fields = [
   {name="id",              type="serial" },
   {name="content",         type="text",                comment="Текст" },
   {name="task_type_id",    type="int",                 ext="not null",    comment="Тип. Запрет на изменени. Проверка в триггере." },
   {name="task_type_title", type="char",  size=100,                        comment="Название типа задачи. Проставляется автоматически триггером" },
   {name="table_name",      type="char",  size=70,      comment="Название таблицы. Проставляется автоматически триггером" },
   {name="table_id",        type="int",                 comment="id в таблице. Запрет на изменени. Проверка в триггере." },
   {name="table_options",   type="jsonb",               comment="данные из таблицы (title и пр). Запрет на изменения. Проверка в триггере." },
   {name="executor_id",     type="int",                 ext="not null",    comment="Исполнитель" },
   {name="manager_id",      type="int",                 comment="Постановщик" },
   {name="state",           type="char",  size=50,      ext="not null",    comment="Статус: in_process, finished" },
   {name="deadline",        type="timestamp",           comment="Срок" },
   {name="date_completed",  type="timestamp",           comment="Дата исполнения" },
   {name="result",          type="text",                comment="Отчет об исполнении" },
   {name="success_rate",    type="int",                 comment="Оценка успешности (0-10)" },
   {name="options",         type="jsonb",               comment="Разные дополнительные параметры" },
   {name="created_at",      type="timestamp",           ext="with time zone" },
   {name="updated_at",      type="timestamp",           ext="with time zone" },
   {name="deleted",         type="bool",                ext="not null default false" },
   
]

fkConstraints = [
  {fld="task_type_id", ref="task_type", fk="id"},
  {fld="executor_id", ref="\"user\"", fk="id"},
  {fld="manager_id", ref="\"user\"", fk="id"},
]

triggers = [
    {name="task_created", when="before insert or update", ref="for each row", funcName="builtin_fld_update"},
    {name="task_update_table_name", when="before insert or update", ref="for each row", funcName="trigger_task_update_table_name"},
    {name="task_event", when="after insert or update", ref="for each row", funcName="notify_event"},
]

methods = [
    "task_update",
    "task_list",
    "task_get_by_id",
    "task_action_to_finished",
    "task_list_for_user",
    "task_create_by_task_type_title",
# for codeGenerate task_methods_slot
]