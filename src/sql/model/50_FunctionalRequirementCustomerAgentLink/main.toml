docType = "FunctionalRequirementCustomerAgentLink"
tableComment = "связь функционального требования и представителя заказчика"

tableName ="functional_requirement_customer_agent_link"

fields = [
	{name="id",			type="serial"},
	{name="functional_requirement_id",					type="int",	 comment="функциональное требование"},
	{name="customer_agent_id",					type="int",	 comment="представитель заказчика"},
	{name="description",					type="text",	 comment="описание"},
	{name="author_id",					type="int",	 comment="автор"},
	{name="search_text",			type="text",	comment="колонка для поиска"},
	{name="options",				type="jsonb",	comment="разные дополнительные параметры"},
	{name="created_at",				type="timestamp",	ext="with time zone"},
	{name="updated_at",				type="timestamp",	ext="with time zone"},
	{name="deleted",				type="bool",	ext="not null default false"}
]

fkConstraints = [
	{fld="functional_requirement_id", ref="functional_requirement", fk="id"},
	{fld="customer_agent_id", ref="man", fk="id"},
	{fld="author_id", ref="man", fk="id"},
	{name="functional_requirement_customer_agent_link_already_exist", ext="UNIQUE (functional_requirement_id, customer_agent_id)"},
]

triggers = [
	{name="functional_requirement_customer_agent_link_created", when="before insert or update", ref="for each row", funcName="builtin_fld_update"},
	{name="functional_requirement_customer_agent_link_trigger_before", when="before insert or update", ref="for each row", funcName="functional_requirement_customer_agent_link_trigger_before"},
	{name="functional_requirement_customer_agent_link_trigger_after", when="after insert or update", ref="for each row", funcName="functional_requirement_customer_agent_link_trigger_after"}
]



methods = [
	"functional_requirement_customer_agent_link_update",
	"functional_requirement_customer_agent_link_get_by_id",
	"functional_requirement_customer_agent_link_list",
	"functional_requirement_customer_agent_link_trigger_before",
	"functional_requirement_customer_agent_link_trigger_after"
]

alterScripts = [
	"alter table functional_requirement_customer_agent_link add column if not exists functional_requirement_id int;",
	"alter table functional_requirement_customer_agent_link add column if not exists customer_agent_id int;",
	"alter table functional_requirement_customer_agent_link add column if not exists description text;",
	"alter table functional_requirement_customer_agent_link add column if not exists author_id int;",
	"alter table functional_requirement_customer_agent_link add column if not exists search_text text;"
]